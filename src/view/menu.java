/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import bean.Movimentacao;
import bean.Valores;
import dao.MovimentacaoDAO;
import dao.ValoresDAO;

import java.sql.Timestamp;
import java.text.ParseException;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Evair Daniel
 */
public class menu extends javax.swing.JFrame {

    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
        listaMov();
    }

    public static long diferencaHoras(String h1, String h2) throws ParseException {

        // StringTokenizer stringTokenizer = new StringTokenizer(h1); 
        DateTimeFormatter f = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        // OffsetDateTime newData = LocalDateTime.parse(stringTokenizer.nextToken("."), f).atOffset(ZoneOffset.UTC);
        LocalDateTime dt1 = LocalDateTime.parse(h1, f);
        LocalDateTime dt2 = LocalDateTime.parse(h2, f);

        long diferencaMili = Duration.between(dt2, dt1).toMillis();
        long diferencaSeg = Duration.between(dt2, dt1).getSeconds();
        long diferencaMin = Duration.between(dt2, dt1).toMinutes();

        long horas = diferencaMili / 3600000;
        long minutos = (diferencaMili - horas * 3600000) / 60000;

        long diferenca = horas * 60;
        long tempo = diferenca + minutos;
        return tempo;
    }

    public void listaMov() {
        lblNomeTempo.setVisible(false);
        lblNomeVal.setVisible(false);
        lblValor.setVisible(false);
        lblTempo.setVisible(false);
        DefaultTableModel model = new DefaultTableModel();
        model.removeTableModelListener(jTMovimentacao);
        jTMovimentacao.setModel(model);
        model = (DefaultTableModel) jTMovimentacao.getModel();
        MovimentacaoDAO ldao = new MovimentacaoDAO();

        model.addColumn("ID");
        model.addColumn("PLACA");
        model.addColumn("MODELO");
        model.addColumn("DT ENTRADA");
        for (Movimentacao m : ldao.read()) {

            model.addRow(new Object[]{
                m.getId(),
                m.getPlaca(),
                m.getModelo(),
                m.getData_entrada(), // m.getData_saida(),
            // m.getTempo(),
            // m.getValor_pago()
            });

        }
    }

    public void listaMov2() {

        lblNomeTempo.setVisible(true);
        lblNomeVal.setVisible(true);
        lblValor.setVisible(true);
        lblTempo.setVisible(true);

        DefaultTableModel model = new DefaultTableModel();
        model.removeTableModelListener(jTMovimentacao);
        jTMovimentacao.setModel(model);
        model = (DefaultTableModel) jTMovimentacao.getModel();
        MovimentacaoDAO ldao = new MovimentacaoDAO();

        model.addColumn("ID");
        model.addColumn("PLACA");
        model.addColumn("MODELO");
        model.addColumn("DT ENTRADA");
        model.addColumn("DT SAIDA");
        model.addColumn("TEMPO");
        model.addColumn("VALOR PAGO");

        for (Movimentacao m : ldao.read2()) {

            model.addRow(new Object[]{
                m.getId(),
                m.getPlaca(),
                m.getModelo(),
                m.getData_entrada(),
                m.getData_saida(),
                m.getTempo(),
                m.getValor_pago()
            });

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTMovimentacao = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSaida = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        lblNomeVal = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        lblNomeTempo = new javax.swing.JLabel();
        lblTempo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTMovimentacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTMovimentacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTMovimentacaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTMovimentacao);

        jButton1.setText("Nova Entrada");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSaida.setText("Saída de Veiculo");
        btnSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaidaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("VEÍCULOS DO ESTACIONAMENTO");

        jLabel2.setText("ID");

        jLabel3.setText("PLACA");

        jLabel4.setText("MODELO");

        txtId.setEnabled(false);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estacionado", "Não Estacionado" }));
        cmbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusActionPerformed(evt);
            }
        });

        jLabel5.setText("STATUS");

        jButton2.setText("Fechar o Sistema");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblNomeVal.setText("Valor R$");

        lblValor.setText("0,00");

        lblNomeTempo.setText("Tempo");

        lblTempo.setText("0:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(90, 90, 90)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblNomeTempo))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblNomeVal))))
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValor)
                                    .addComponent(lblTempo))
                                .addGap(19, 19, 19))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(47, 61, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditar)
                        .addGap(69, 69, 69)
                        .addComponent(btnSaida)
                        .addGap(61, 61, 61)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEditar, btnSaida, jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblNomeVal)
                            .addComponent(lblValor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomeTempo)
                            .addComponent(lblTempo))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaida)
                    .addComponent(jButton1)
                    .addComponent(btnEditar)
                    .addComponent(jButton2))
                .addGap(15, 15, 15))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        new NovaEntrada().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if (txtModelo.getText().equals("") || txtPlaca.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha todos os dados!");
        } else {

            Movimentacao mov = new Movimentacao();
            MovimentacaoDAO dao = new MovimentacaoDAO();
            mov.setId(Integer.parseInt(txtId.getText()));
            mov.setPlaca(txtPlaca.getText());
            mov.setModelo(txtModelo.getText());

            dao.update(mov);
            new menu().setVisible(true);
            txtPlaca.setText("");
            txtModelo.setText("");
            txtId.setText("");
            this.dispose();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTMovimentacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTMovimentacaoMouseClicked
        // TODO add your handling code here:
        if (jTMovimentacao.getSelectedRow() != -1) {
            txtId.setText(jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 0).toString());
            txtPlaca.setText((String) jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 1));
            txtModelo.setText((String) jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 2));
        }
        if (cmbStatus.getSelectedItem() != "Estacionado") {
            lblValor.setText(jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 6).toString().replace(",", "?").replace(".", ",").replace("?", "."));
            int minutos = (int) jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 5) % 60;
            int horas = 0;
            horas = ((int) jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 5) - minutos) / 60;

            lblTempo.setText(Integer.toString(horas) + ":" + Integer.toString(minutos) + "H");
        }
    }//GEN-LAST:event_jTMovimentacaoMouseClicked

    private void btnSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaidaActionPerformed
        // TODO add your handling code here:
        if (jTMovimentacao.getSelectedRow() != -1) {
            UIManager.put("OptionPane.noButtonText", "Não");
            UIManager.put("OptionPane.yesButtonText", "Sim");

            if (JOptionPane.showConfirmDialog(null, "Deseja realmente dar saída desse veiculo?", "Sair",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                Movimentacao mov = new Movimentacao();
                MovimentacaoDAO dao = new MovimentacaoDAO();

                mov.setId(Integer.parseInt(txtId.getText()));
                LocalDateTime d1 = LocalDateTime.now();
                LocalDateTime d2;
                Timestamp t2;
                t2 = (Timestamp) jTMovimentacao.getValueAt(jTMovimentacao.getSelectedRow(), 3);
                d2 = t2.toLocalDateTime();
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                String s1 = d1.format(formatter);
                String s2 = d2.format(formatter);

                mov.setData_saida(Timestamp.valueOf(d1));

                try {

                    long tempo = diferencaHoras(s1, s2);
                    mov.setTempo((int) tempo);
                    ValoresDAO vdao = new ValoresDAO();
                    Float valor_pago;
                    Float primeira_hora = 0f;
                    Float valor_demais_horas = 0f;

                    for (Valores v : vdao.read()) {

                        primeira_hora = v.getValor_primeira_hora();
                        valor_demais_horas = v.getValor_demais_horas();
                    }
                    if (tempo < 60) {

                        valor_pago = primeira_hora;

                    } else {
                        long minutos = tempo % 60;
                        long horas = 0;
                        horas = (tempo - minutos) / 60;

                        if (minutos > 0 && minutos < 60) {
                            valor_pago = primeira_hora + (horas * valor_demais_horas);
                        } else {
                            valor_pago = primeira_hora + ((horas - 1) * valor_demais_horas);
                        }
                    }
                    mov.setValor_pago(valor_pago);
                    dao.saida(mov);
                    new menu().setVisible(true);
                    txtPlaca.setText("");
                    txtModelo.setText("");
                    txtId.setText("");

                } catch (ParseException ex) {
                    Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleciona um Veiculo");
        }
    }//GEN-LAST:event_btnSaidaActionPerformed

    private void cmbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusActionPerformed
        // TODO add your handling code here:
        if (cmbStatus.getSelectedItem() == "Estacionado") {
            btnEditar.setEnabled(true);
            btnSaida.setEnabled(true);
            txtModelo.setEnabled(true);
            txtPlaca.setEditable(true);

            listaMov();

        } else {
            listaMov2();
            btnEditar.setEnabled(false);
            btnSaida.setEnabled(false);
            txtModelo.setEnabled(false);
            txtPlaca.setEditable(false);
        }
    }//GEN-LAST:event_cmbStatusActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        UIManager.put("OptionPane.noButtonText", "Não");
        UIManager.put("OptionPane.yesButtonText", "Sim");

        if (JOptionPane.showConfirmDialog(null, "Deseja realmente sair?", "Sair",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnSaida;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMovimentacao;
    private javax.swing.JLabel lblNomeTempo;
    private javax.swing.JLabel lblNomeVal;
    private javax.swing.JLabel lblTempo;
    private javax.swing.JLabel lblValor;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables
}
